---
//sidebar styles
---

<style lang="scss">
  // Sidebar
  // The sidebar is the drawer, the item we are toggling with our hamburger button in the corner of the page. This implementation was inspired by C.Coyier's "Offcanvas Menu with CSS Target" article, and the checkbox variation from the comments by a reader. It modifies both implementations to continue using the checkbox (no change in URL means no polluted browser history), but this uses  `position` for the menu to avoid some potential content reflow issues.*/

  // Source: http://css-tricks.com/off-canvas-menu-with-css-target/#comment-207504*/

  .sidebar {
    display: flex;
    flex-direction: column;
    align-items: center;

    overflow-y: scroll; // fixed scrollbar
    color: white;
    background-color: black;

    position: fixed;
    top: 0;
    bottom: 0;
    visibility: hidden;

    width: var(--sidebarwidth);
    left: -var(--sidebarwidth);

    // on mobiles navigation need to be big so to touch it easily
    // basically stay big (line-height) on mobiles and go small on big screens
    // needed to compensate the growing of font-size with growing vw

    @media (min-width: var(--sm)) {
      width: var(--sidebarwidth-base);
      left: -var(--sidebarwidth-base);
    }

    @media (min-width: var(--md)) {
      width: var(--sidebarwidth-min);
      left: -var(--sidebarwidth-min);
    }

    @media (min-width: var(--lg)) {
      width: var(--sidebarwidth);
      left: -var(--sidebarwidth);
    }

    @media (min-width: var(--xl)) {
      width: var(--sidebarwidth-max);
      left: -var(--sidebarwidth-max);
    }

    a {
      font-weight: 400;
      color: var(--primary);
    }

    .avatar img {
      border-radius: 50%; //opera mini issue here
      margin: 1rem auto;
      width: 50%;
    }

    .to-home {
      color: rgba(0, 150, 255, 0.75);

      &:hover {
        color: rgba(0, 150, 255, 1);
      }
    }

    .descri {
      display: block;
      text-align: center;
      line-height: 1.2;
      padding-bottom: 20px;
      padding-left: 1.5em;
      padding-right: 1.5rem;

      &.title {
        padding-top: 20px;
        padding-bottom: 0;
      }
    }

    .fontsizefixed {
      font-size: 14px;
    }

    // this is the toggle X to close sidebar
    .tog {
      z-index: 1000;
      position: absolute;
      right: 1rem;
    }
  }

  // Sidebar content*/
  .sidebar-item {
    padding: 1rem;

    p:last-child {
      margin-bottom: 0;
    }
  }

  // Sidebar nav
  // .sidebar-nav
  .sidebar-nav-item {
    display: block;
    padding: 0.5rem 2rem;
    text-transform: capitalize;
    border-top: 1px solid var(--primary);
  }

  .sidebar-nav-item:last-child {
    border-bottom: 1px solid var(--primary);
  }

  .sidebar-nav-item.active,
  a.sidebar-nav-item:focus,
  a.sidebar-nav-item:hover {
    text-decoration: none;
    background-color: var(--primary);
    border-color: transparent;
  }

  // Hide the sidebar checkbox that we toggle with `.sidebar-toggle`
  .sidebar-checkbox {
    display: none;
  }

  .sidebar-toggle-button {
    //button
    position: fixed;
    top: 1rem;
    right: 1rem;
    z-index: 100;
    display: block !important;
  }

  .sidebar-toggle {
    //label
    width: 48px;
    height: 48px;
    display: block;
    cursor: pointer;
    display: table;
    text-align: center;
  }

  // Reverse layout
  // Flip `.sidebar` and sidebar toggle on the right side.*/
  .layout-reverse .sidebar {
    left: auto;
    // right: -var(--sidebarwidth;

    @media (min-width: var(--sm)) {
      right: -var(--sidebarwidth-base);
    }

    @media (min-width: var(--md)) {
      right: -var(--sidebarwidth-min);
    }

    @media (min-width: var(--lg)) {
      right: -var(--sidebarwidth);
    }

    @media (min-width: var(--xl)) {
      right: -var(--sidebarwidth-max);
    }
  }

  .layout-reverse .sidebar-toggle {
    left: -4rem;
    right: auto;
  }

  .layout-reverse #sidebar-checkbox:checked ~ .sidebar,
  .layout-reverse #sidebar-checkbox:checked ~ .wrap {
    transform: translateX(-var(--sidebarwidth));
    // needed to compensate the growing of font-size with growing vw
    @media (min-width: var(--sm)) {
      transform: translateX(-var(--sidebarwidth-base));
    }
    @media (min-width: var(--md)) {
      transform: translateX(-var(--sidebarwidth-min));
    }
    @media (min-width: var(--lg)) {
      transform: translateX(-var(--sidebarwidth));
    }
    @media (min-width: var(--xl)) {
      transform: translateX(-var(--sidebarwidth-max));
    }
  }

  .sidebar,
  .wrap {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  .sidebar-toggle,
  .wrap {
    transition: transform 0.3s ease-in-out;
  }

  // kill some deafults
  .sidebar-toggle-button:active,
  .sidebar-toggle-button:focus,
  .sidebar-toggle-button:hover,
  .sidebar-toggle:active .sidebar-toggle:hover,
  .sidebar-toggle:focus {
    outline: 0 !important;
    border: 0;
  }

  .sidebar-toggle-button {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  //:checked
  // .sidebar-toggle:active,
  // #sidebar-checkbox:checked ~ .sidebar-toggle {
  //   background-color: red;
  // }

  #sidebar-checkbox:checked + .sidebar {
    z-index: 101;
    visibility: visible;
  }

  #sidebar-checkbox:checked ~ .sidebar,
  #sidebar-checkbox:checked ~ .sidebar-toggle,
  #sidebar-checkbox:checked ~ .wrap {
    //needed to compensate the growing of font-size with growing vw..
    @media (min-width: var(--sm)) {
      transform: translateX(var(--sidebarwidth-base));
    }
    @media (min-width: var(--md)) {
      transform: translateX(var(--sidebarwidth-min));
    }
    @media (min-width: var(--lg)) {
      transform: translateX(var(--sidebarwidth));
    }
    @media (min-width: var(--xl)) {
      transform: translateX(var(--sidebarwidth-max));
    }
  }

  // make page adapt when sidebar is open*/
  // sidebar is open, page is narrower now - change text-align for blocks*/
  // #sidebar-checkbox:checked ~ .sidebar-toggle .fa {*/
  //del   pointer-events: none;

  #sidebar-checkbox:checked ~ .wrap {
    padding-left: var(--sidebarwidth);
    @media (min-width: var(--sm)) {
      padding-left: var(--sidebarwidth-base);
    }
    @media (min-width: var(--md)) {
      padding-left: var(--sidebarwidth-min);
    }
    @media (min-width: var(--lg)) {
      padding-left: var(--sidebarwidth);
    }
    @media (min-width: var(--xl)) {
      padding-left: var(--sidebarwidth-max);
    }

    .taglineplus {
      display: none;
    }

    .entry-wrapper {
      text-align: left;
    }

    .bamboo {
      margin-left: 0;
      margin-right: 0;
    }

    .bamboo.last {
      display: none;
    }

    .seemore {
      text-align: right;
    }
  }
</style>
