---
import * as siteData from '@data/site.json'
import * as repoData from 'package.json'
import { Icon } from 'astro-icon'
import NavContacts from '@components/NavContacts.astro'
import NavLinks from '@components/NavLinks.astro'
import Testimonials from '@components/Testimonials.astro'
import Clients from '@components/Clients.astro'
import EditorialClients from '@components/EditorialClients.astro'

const today = new Date()

import { getImage } from 'astro:assets'
import rokmAvatar from '@p/00.jpg'

const optimizedBackground = await getImage({
  src: rokmAvatar,
  format: 'avif',
  quality: 'high'
})
---

<label for='nav' class='toggle'>
  <Icon name='nav' />
</label>

<input type='checkbox' id='nav' />

<div class='sidebar'>
  <div
    style={`
    background-image: url(${optimizedBackground.src});
    background-position: center center;
    background-size: cover; width: 100%;
    height: 100%;
    position: absolute;
    z-index: -1;
    filter: brightness(60%);`}
  >
  </div>
  <div class='top centre'>
    <label for='nav' class='toggle'>
      <Icon name='x' />
    </label>

    <a
      class='go_home'
      href='/'
      title='close navigation and go back to home page'
      ><h1>{siteData.title}</h1></a
    >

    <h2 class='h4'>{siteData.tagline}</h2>
  </div>

  <div class='middle'>
    <div class='middle_scroller'>
      <NavLinks />

      <br />

      <Testimonials />
      <br />
      <Clients />
      <br />
      <EditorialClients />
    </div>
  </div>

  <div class='bottom centre'>
    <NavContacts />

    <small>
      Copyright Â© 2012-{today.getFullYear()} Rokma. All rights reserved. v{
        repoData.version
      }. Powered by
      <a
        class='producer'
        title='producer'
        target='_blank'
        href='https://junglestar.org'>Junglestar</a
      >
    </small>
  </div>
</div>

<style lang='scss'>
  :root {
    --sidebar_width: 100vw;
    @media (min-width: var(--sm)) {
      --sidebar_width: 50dvw;
    }
  }

  .sidebar {
    //padding: 3rem 8px 1.5rem 8px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;

    overflow-y: scroll;
    color: white;
    background-color: #000;

    position: fixed;
    top: 0;
    bottom: 0;
    visibility: hidden;

    width: var(--sidebar_width);
    left: calc(100vw - var(--sidebar_width));

    a,
    h1,
    h2 {
      font-weight: 400;
      color: white !important;
      margin-bottom: 0;
    }

    .avatar img {
      border-radius: 50%; //opera mini issue here
      margin: 1rem auto;
      width: 50%;
    }
  }

  .top {
    position: fixed;
    top: 1.75rem;
  }

  .middle {
    max-width: 100vw;
    position: fixed;
    overflow-x: hidden;
    overflow-y: scroll;
    top: 8rem;
    bottom: 7rem;
    height: calc(100dvh - 8rem - 7rem);
    .middle_scroller {
      width: 100dvw;
      margin: 0 auto;
    }
  }

  .bottom {
    position: fixed;
    bottom: 1rem;
    padding: 0 10px;
  }

  #nav {
    display: none;
  }

  label.toggle {
    position: fixed;
    top: 1rem;
    right: 1rem;
    z-index: 100;
    display: block !important;

    width: 48px;
    height: 48px;
    display: block;
    cursor: pointer;
    text-align: center;
  }

  .sidebar,
  .wrap {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  // label,
  // .wrap {
  //   transition: all 0.8s ease-in-out;
  // }

  // kill some deafults
  .toggle:active,
  .toggle:focus,
  .toggle:hover,
  label:active label:hover,
  label:focus {
    outline: 0 !important;
    border: 0;
  }

  .toggle {
    user-select: none;
  }

  #nav:checked + .sidebar {
    z-index: 101;
    visibility: visible;
  }

  body:has(#nav:checked) {
    overflow: hidden;
  }

  .toggle svg {
    background-color: var(--primary_back);
    color: var(--primary);
    border-radius: var(--radius);
  }
  .producer {
    //a
    text-decoration: underline;
    text-underline-offset: 0.25rem;
    text-decoration-thickness: 0.1rem;
    text-decoration-skip-ink: auto;
    text-decoration-color: white;
    &:hover {
      text-decoration: underline;
      text-decoration-color: var(--text-decoration-color--nav);
    }
  }
</style>
