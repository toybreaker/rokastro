---
import { fade } from 'astro:transitions'
import Layout from '@layouts/Layout.astro'
import * as siteData from '@data/site.json'
import Slide from '@components/Slide.astro'
import Icon from 'astro-icon'

const { title, category, images, tags, bodyClass } =
  Astro.props.frontmatter || Astro.props

const pageDesc = siteData.description_web
---

<Layout
  pageTitle={title}
  pageDesc={pageDesc}
  mainClass=''
  bodyClass={category + ' ' + bodyClass}
  ogImage={images[0]}
>
  <div class='container uppercase' slot='header'>
    <a
      transition:name='title'
      class='breadcrumb'
      href='/'
      transition:animate={fade({ duration: '0.4s' })}
    >
      {siteData.title}
    </a>
    <span>&nbsp;>&nbsp;</span>
    <a class='breadcrumb' href={`/${category}/`}>{category}</a>

    <h1>{title}</h1>
  </div>

  <hr slot='header' />

  <div slot='images' class='images'>
    {
      images.map((i: string) => {
        return <Slide p={i} alt='g' quality='high' cssClass='slide' />
      })
    }
  </div>

  <div class='container content'>
    <div class='tag_section'>
      <Icon name='tag' class='tag' />
      <ul class='tags'>
        {
          tags.map((tag: string) => {
            return (
              <li>
                <a class='' href={`/${tag}/`}>
                  {tag}
                </a>
              </li>
            )
          })
        }
      </ul>
    </div>

    <slot />
  </div>

  <div class='is_footer_child' slot='footer'>FOO ter</div>

  <style lang='scss'>
    h1 {
      margin-bottom: 1rem !important;
      max-width: calc(100vw - 100px);
    }
    hr {
      margin-top: 0 !important;
    }
    .post_content ul li {
      list-style-type: none !important;
    }

    .tag_section {
      display: flex;
      flex-direction: row;
      align-items: flex-start;
      padding-top: var(--spacing);
      margin-bottom: var(--spacing);
    }

    .tags {
      padding-top: var(--spacing);
      max-width: none !important;
      li {
        display: inline-block;
        padding-right: 1rem;
        text-transform: uppercase;
      }
    }

    svg.tag {
      width: 43px;
      position: relative;
      top: 1rem;
    }

    a.breadcrumb {
      color: var(--primaryBG) !important;
    }
  </style>
</Layout>
