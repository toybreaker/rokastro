---
import Layout from '@layouts/Layout.astro'
import * as siteData from '@data/site.json'
import Slide from '@components/Slide.astro'
import Icon from 'astro-icon'

const { title, category, images, tags, bodyClass } =
  Astro.props.frontmatter || Astro.props

const pageDesc = siteData.description_web
const mainClass = 'container'
const ogImages = images[0]
---

<Layout
  pageTitle={title}
  pageDesc={pageDesc}
  mainClass={mainClass}
  bodyClass={category + ' ' + bodyClass}
  ogImage={ogImages}
>
  <div class='uppercase' slot='header'>
    <nav aria-label='breadcrumb'>
      <a href='/'>
        {siteData.title}
      </a>
      <span>&nbsp;>&nbsp;</span>
      <a href={`/${category}/`}>{category}</a>
    </nav>

    <h1>{title}</h1>
  </div>

  <div slot='images' class='images'>
    {
      images.map((i: string) => {
        return <Slide p={i} alt='g' quality='high' cssClass='slide' />
      })
    }
  </div>

  <div class='container content'>
    <slot />

    <div class='tag_section'>
      <Icon name='tag' class='tag' />
      <ul class='tags'>
        {
          tags.map((tag: string) => {
            return (
              <li>
                <a class='' href={`/${tag}/`}>
                  {tag}
                </a>
              </li>
            )
          })
        }
      </ul>
    </div>
  </div>
</Layout>

<style>
  .content {
    max-width: var(--reading);
    margin-inline: auto;
  }
  .tag_section {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding-block-start: var(--spaceTB);
    margin-block-end: var(--spaceTB);
    gap: 2rem;
  }

  .tags {
    padding-block-start: var(--spaceTB);
    max-width: none;
    li {
      display: inline-block;
      padding-inline-end: 1rem;
      text-transform: uppercase;
    }
  }

  svg.tag {
    width: 43px;
    position: relative;
    top: 1rem;
  }

  .breadcrumb {
    display: inline-block;
    padding-block-start: 0.75ch;
  }

  body.grid_small {
    main {
      container-type: inline-size;
    }

    .images {
      display: block;

      @container (min-width: 320px) {
        display: grid;
        grid-gap: 15px;
        grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));
      }

      @container (min-width: 640px) {
        grid-template-columns: repeat(2, 1fr);
      }

      @container (min-width: 1130px) {
        grid-template-columns: repeat(3, 1fr);
      }
      .slide {
        margin: 0;
      }
    }
  }

  body.grid_big {
    main {
      container-type: inline-size;
    }

    .images {
      display: block;

      @container (min-width: 320px) {
        display: grid;
        grid-gap: 15px;
        grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));
      }

      @container (min-width: 768px) {
        grid-template-columns: repeat(2, 1fr);
      }

      @container (min-width: 1420px) {
        grid-template-columns: repeat(3, 1fr);
      }
      .slide {
        margin: 0;
      }
    }
  }
</style>
