---
import '@fontsource/dosis'
import '@css/fiko.css'
//// USE [blackandwhite.scss] COMPONENT
//// TO CUSTOMIZE FIKO LIGHT/DARK MODE LOOK FOR THIS PROJECT.
//import '@components/style/colors/blackandwhite.scss'
---

<style lang='scss' is:global>
  :root {
    //
    // ROK SAME LIGHT AND DARK MODE STUPID HACK
    // BACKGROUND COLOURS FOR INDEX PAGES
    // COLORS:
    --gray: rgb(229, 228, 226);
    --lightgray: rgb(238, 238, 238);
    --darkgray: rgb(212, 212, 212);
    --offwhite: rgb(230, 230, 230);

    // SAME FOOTER FOR THE LIGHT/DARK MODE
    --footer_color: rgb(30, 30, 30);
    --footer_BG: darkgray;

    // ROK
    --font-family: 'Dosis';
    --font-size: 21px; //FALLBACK?!
    --bodyfontweight: 300;

    --space: 2rem;
    --space_small: 1rem;
    --space_tiny: 0.5rem;
    --spacing: var(--space_tiny);

    --radius: 5px;
    --icon_size: 40px; //ALL SVG ICONS ARE SQUARE
    --nav-element-spacing-vertical: 0.25rem;
    --nav-element-spacing-horizontal: 0.25rem;
    --paragraph_width: 60ch;
    --form-element-spacing-vertical: 0.5rem;
    --form-element-spacing-horizontal: 0.7rem;
    --nav-link-spacing-vertical: 0.35rem;
    --nav-link-spacing-horizontal: 0.35rem;
    --border-width: 0.125rem;
  }

  //ROK
  .gray,
  .darkgray,
  .offwhite {
    .toggle > svg {
      background-color: red;
      background-color: transparentize(red, 0.7);
      border-radius: var(--radius);
    }
  }

  .container {
    max-width: 90dvw;
    margin: 0 auto;
  }

  @media (min-width: var(--sm)) {
    :root {
      --font-size: 22px;
    }
  }
  @media (min-width: var(--md)) {
    :root {
      --font-size: 23px;
    }
  }
  @media (min-width: var(--lg)) {
    :root {
      --font-size: 24px;
    }
  }
  @media (min-width: var(--xl)) {
    :root {
      --font-size: 26px;
    }
  }
  @media (min-width: var(--xxl)) {
    :root {
      --font-size: 28px;
    }
  }
  @media (min-width: var(--xxxl)) {
    :root {
      --font-size: 32px;
    }
  }

  body {
    min-height: 100dvh;
    overflow-x: hidden;
    margin: 0;
    font-weight: var(--bodyfontweight);
    font-size: var(--font-size);
  }

  * {
    box-shadow: none;
  }

  .content {
    p {
      max-width: var(--paragraph_width);
    }

    margin: 0 auto;
  }

  footer {
    padding: 0;
  }

  em {
    font-weight: 100;
    display: block;
    font-size: 105%;
  }

  .break_on_phones {
    display: none;
    @media (max-width: 576px) {
      display: block;
    }
  }

  .hide {
    display: none;
    &.show {
      display: inherit;
    }
  }
  .centered,
  .center,
  .centre {
    text-align: center;
  }
  .noselect {
    user-select: none;
  }

  .ptop,
  .padding_top,
  .top_padded,
  .top_pad,
  .toppad,
  .pad_top,
  .padtop {
    padding-block-start: var(--spaceTB);
  }

  .pbot,
  .padding_bottom,
  .bottom_padded,
  .bottom_pad,
  .botpad,
  .bottompad,
  .pad_bot,
  .padbot {
    padding-block-end: var(--spaceTB);
  }
  .uppercased,
  .uppercase,
  .upc {
    text-transform: uppercase;
  }

  .no_padding {
    padding: 0;
  }
  .no_margin {
    margin: 0;
  }

  ul:not(.tags) {
    padding-inline-start: var(--spaceLR);
    li {
      list-style: disc;
    }
  }
  a.contrast {
    white-space: nowrap;
  }
  hr.spacer {
    height: 3rem;
    border: var(--borderS) solid transparent;
  }

  .align_right {
    text-align: right;
  }

  .slide {
    margin-block: 0;
    margin-inline: 0;
    margin-block-end: var(--spaceTB);
    border-radius: var(--radius);
  }

  .posts {
    //at full width 3 columns
    display: grid;

    grid-template-columns: repeat(auto-fit, minmax(100%, 1fr));
    //grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    @media (min-width: 701px) {
      grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));
      padding-block-start: 2rem;
      padding-block-end: 2rem;
    }

    grid-gap: 10px;
    .slide {
      margin: 0;
    }
  }

  .all_posts .post {
    display: block;
    .card:has(h2) {
      margin-block-start: 0;
    }
  }

  .grid .images {
    display: block;

    @media (min-width: 320px) {
      display: grid;
      grid-gap: 15px;
      grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));
    }

    @media (min-width: 576px) {
      grid-template-columns: repeat(2, 1fr);
    }

    @media (min-width: 768px) {
      grid-template-columns: repeat(3, 1fr);
    }

    @media (min-width: 1200px) {
      grid-template-columns: repeat(4, 1fr);
    }
    .slide {
      margin: 0;
    }
  }

  p a {
    text-decoration: underline;
    text-underline-offset: 0.2rem;
    text-decoration-thickness: 0.2rem;
    text-decoration-skip-ink: auto;
    color: var(--currentTXT);
    &:hover {
      opacity: 0.75;
    }
  }

  // NAV STICKY ACCORDION HEADERS

  .post_title {
    span {
      background-color: black;
      padding-block: 0;
      padding-inline: 5px;
      border: 2px solid var(--currentTXT);
      color: var(--primaryB);
    }
  }

  .flex_centre {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  .hide_on_phones {
    display: inherit;
    width: auto;
    @media (max-width: 376px) {
      display: none;
      width: 0;
      height: 0;
      //
      //   height: auto;
      //   font-size: clamp(1rem, 0.8394rem + 0.6761vw, 1.6rem);
      //   line-height: clamp(1rem, 0.8394rem + 0.6761vw, 1.6rem);
    }
  }

  body {
    // PAGE VARIANTS
    &.offwhite {
      background-color: var(--offwhite);
    }
    &.lightgray {
      background-color: var(--lightgray);
    }
    &.gray {
      background-color: var(--gray);
    }
    &.darkgray {
      background-color: var(--darkgray);
    }
    &.black {
      --currentTXT: var(--color-light);
      --primaryFront: var(--color-light);
      color: var(--color-light);
      background-color: var(--color-dark);

      [role='button'] {
        border-color: var(--color-light);
      }

      [role='link'] {
        color: var(--color-light);
      }

      .post_title span {
        --primaryFront: var(--color-light);
        border: 2px solid var(--color-light);
        padding-block: 0;
        padding-inline: 5px;
      }

      .card.outline {
        border-color: var(var(--color-light));
        background-color: var(var(--color-light));
      }
      span {
        color: var(--color-light);
      }
    }
  }
</style>
